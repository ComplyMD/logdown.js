{"version":3,"sources":["logdown.js"],"names":["Logdown","opts","this","prefix","undefined","sanitizeStringToBrowser","isPrefixAlreadyInUse","instances","getInstanceByPrefix","alignOutput","Boolean","markdown","push","alignPrefixes","isBrowser","prefixColor","colors","lastUsedColorIndex","length","isNode","getNextPrefixColor","longest","sort","a","b","forEach","instance","padding","Array","Math","max","join","parseMarkdown","text","styles","match","getNextMatch","replace","rule","regexp","replacer","style","matches","rules","submatch1","ansiColors","modifiers","bold","italic","bgColors","bgYellow","black","index","prepareOutputToBrowser","args","parsedMarkdown","preparedOutput","isColorSupported","concat","splice","prepareOutputToNode","method","yellow","red","blue","gray","arg","isDisabled","envVar","process","env","filterRegExps","NODE_DEBUG","DEBUG","disable","split","regExp","enable","isDisabled_","filter","type","test","prepareRegExpForPrefixSearch","str","RegExp","isPrefixAlreadyInUse_","instanceCur","isWebkit","document","documentElement","isFirebug","window","console","firebug","exception","table","isFirefox31Plus","navigator","userAgent","toLowerCase","parseInt","$1","stdout","isTTY","platform","TERM","module","exports","reset","dim","underline","inverse","hidden","strikethrough","green","magenta","cyan","white","bgBlack","bgRed","bgGreen","bgBlue","bgMagenta","bgCyan","bgWhite","prototype","call","arguments","substr","methods","slice","Function","apply","log","lastUsed","nodePrefixColors"],"mappings":";;;;;;;;CAEA,WACA,YAoDA,SAAAA,GAAAC,GAEA,KAAAC,eAAAF,IACA,MAAA,IAAAA,GAAAC,EAGAA,GAAAA,KAEA,IAAAE,GAAAC,SAAAH,EAAAE,OAAA,GAAAF,EAAAE,MAEA,OADAA,GAAAE,EAAAF,GACAA,GAAAG,EAAAH,EAAAI,GACAC,EAAAL,EAAAI,IAIAL,KAAAO,YAAAC,QAAAT,EAAAQ,aACAP,KAAAS,SAAAP,SAAAH,EAAAU,UAAAV,EAAAU,SACAT,KAAAC,OAAAA,EAGAI,EAAAK,KAAAV,MACAW,EAAAN,GAEAO,KACAZ,KAAAa,YAAAC,EAAAC,EAAAD,EAAAE,QACAD,GAAA,GACAE,MACAjB,KAAAa,YAAAK,KAGAlB,MAqFA,QAAAW,GAAAN,GACA,GAAAc,GAAAd,EAAAe,KAAA,SAAAC,EAAAC,GACA,MAAAA,GAAArB,OAAAe,OAAAK,EAAApB,OAAAe,SACA,EAEAX,GAAAkB,QAAA,SAAAC,GACA,GAAAA,EAAAjB,YAAA,CACA,GAAAkB,GAAA,GAAAC,OAAAC,KAAAC,IAAAT,EAAAlB,OAAAe,OAAAQ,EAAAvB,OAAAe,OAAA,EAAA,IAAAa,KAAA,IACAL,GAAAvB,OAAAuB,EAAAvB,OAAAwB,KAKA,QAAAK,GAAAC,GAIA,IAHA,GAAAC,MACAC,EAAAC,EAAAH,GAEAE,GACAF,EAAAA,EAAAI,QAAAF,EAAAG,KAAAC,OAAAJ,EAAAG,KAAAE,UAEA1B,MACAoB,EAAAtB,KAAAuB,EAAAG,KAAAG,OACAP,EAAAtB,KAAA,KAGAuB,EAAAC,EAAAH,EAGA,QAAAA,KAAAA,EAAAC,OAAAA,GAGA,QAAAE,GAAAH,GACA,GAAAS,MACAC,IAsEA,OArEA7B,KACA6B,IAEAJ,OAAA,eACAC,SAAA,SAAAL,EAAAS,GACA,MAAA,KAAAA,EAAA,MAEAH,MAAA,sBAGAF,OAAA,YACAC,SAAA,SAAAL,EAAAS,GACA,MAAA,KAAAA,EAAA,MAEAH,MAAA,uBAGAF,OAAA,YACAC,SAAA,SAAAL,EAAAS,GACA,MAAA,KAAAA,EAAA,MAEAH,MACA,2EAMAtB,MACAwB,IAEAJ,OAAA,eACAC,SAAA,SAAAL,EAAAS,GACA,MAAA,KAAAC,EAAAC,UAAAC,KAAA,GAAA,IACAH,EACA,KAAAC,EAAAC,UAAAC,KAAA,GAAA,OAIAR,OAAA,YACAC,SAAA,SAAAL,EAAAS,GACA,MAAA,KAAAC,EAAAC,UAAAE,OAAA,GAAA,IACAJ,EACA,KAAAC,EAAAC,UAAAE,OAAA,GAAA,OAIAT,OAAA,YACAC,SAAA,SAAAL,EAAAS,GACA,MAAA,KAAAC,EAAAI,SAAAC,SAAA,GAAA,MACAL,EAAA7B,OAAAmC,MAAA,GAAA,KACAP,EAAA,MACAC,EAAA7B,OAAAmC,MAAA,GAAA,MACAN,EAAAI,SAAAC,SAAA,GAAA,QAOAP,EAAAlB,QAAA,SAAAa,GACA,GAAAH,GAAAF,EAAAE,MAAAG,EAAAC,OACAJ,IACAO,EAAA9B,MACA0B,KAAAA,EACAH,MAAAA,MAIA,IAAAO,EAAAxB,OACA,MAIAwB,EAAApB,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAY,MAAAiB,MAAA5B,EAAAW,MAAAiB,QAGAV,EAAA,IAGA,QAAAW,GAAAC,EAAA5B,GACA,GACA6B,GADAC,IAkCA,OA/BA9B,GAAAvB,OACAsD,KACAD,EAAA5C,KAAA,KAAAc,EAAAvB,OAAA,OACAqD,EAAA5C,KACA,SAAAc,EAAAX,YAAA,sBACA,KAGAyC,EAAA5C,KAAA,IAAAc,EAAAvB,OAAA,MAGAqD,EAAA5C,KAAA,IAIA,gBAAA0C,GAAA,GACA5B,EAAAf,UAAA8C,KACAF,EAAAvB,EAAAsB,EAAA,IACAE,EAAA,GAAAA,EAAA,GAAAD,EAAAtB,KACAuB,EAAAA,EAAAE,OAAAH,EAAArB,SAEAsB,EAAA,GAAAA,EAAA,GAAAF,EAAA,GAGAE,EAAA,GAAAF,EAAA,GAGAA,EAAApC,OAAA,IACAsC,EAAAA,EAAAE,OAAAJ,EAAAK,OAAA,KAGAH,EAGA,QAAAI,GAAAN,EAAAO,EAAAnC,GACA,GAAA8B,KAqDA,OAnDA9B,GAAAvB,SACAsD,IACAD,EAAA,GACA,KAAA9B,EAAAX,YAAA,GAAA,MACA8B,EAAAC,UAAAC,KAAA,GAAA,IACArB,EAAAvB,OACA,KAAA0C,EAAAC,UAAAC,KAAA,GAAA,MACArB,EAAAX,YAAA,GAAA,IAEAyC,EAAA,GAAA,IAAA9B,EAAAvB,OAAA,KAIA,SAAA0D,EACAL,EAAA,GACA,KAAAX,EAAA7B,OAAA8C,OAAA,GAAA,OAEAjB,EAAA7B,OAAA8C,OAAA,GAAA,MACAN,EAAA,IAAA,IACA,UAAAK,EACAL,EAAA,GACA,KAAAX,EAAA7B,OAAA+C,IAAA,GAAA,OAEAlB,EAAA7B,OAAA+C,IAAA,GAAA,MACAP,EAAA,IAAA,IACA,SAAAK,EACAL,EAAA,GACA,KAAAX,EAAA7B,OAAAgD,KAAA,GAAA,OAEAnB,EAAA7B,OAAAgD,KAAA,GAAA,MACAR,EAAA,IAAA,IACA,UAAAK,IACAL,EAAA,GACA,KAAAX,EAAA7B,OAAAiD,KAAA,GAAA,QAEApB,EAAA7B,OAAAiD,KAAA,GAAA,MACAT,EAAA,IAAA,KAGAF,EAAA7B,QAAA,SAAAyC,GACA,gBAAAA,IACAxC,EAAAf,SACA6C,EAAA5C,KAAAoB,EAAAkC,GAAAjC,MAKAuB,EAAA5C,KAAAsD,KAIAV,EAGA,QAAAW,GAAAzC,GAIA,GAAA0C,GAAA,IACA,oBAAAC,UACAjE,SAAAiE,QAAAC,KACA,IAAAC,EAAArD,SAEAd,SAAAiE,QAAAC,IAAAE,YACA,KAAAH,QAAAC,IAAAE,WACAJ,EAAA,aACAhE,SAAAiE,QAAAC,IAAAG,OACA,KAAAJ,QAAAC,IAAAG,QACAL,EAAA,SAGAA,IACApE,EAAA0E,QAAA,KACAL,QAAAC,IAAAF,GACAO,MAAA,KACAlD,QAAA,SAAAmD,GACA5E,EAAA6E,OAAAD,MAMA,IAAAE,IAAA,CAUA,OATAP,GAAA9C,QAAA,SAAAsD,GACA,WAAAA,EAAAC,MAAAD,EAAAH,OAAAK,KAAAvD,EAAAvB,QACA2E,GAAA,EACA,YAAAC,EAAAC,MACAD,EAAAH,OAAAK,KAAAvD,EAAAvB,UACA2E,GAAA,KAIAA,EAGA,QAAAI,GAAAC,GACA,MAAA,IAAAC,QAAA,IAAAD,EAAA9C,QAAA,MAAA,OAAA,KAGA,QAAA/B,GAAAH,EAAAI,GACA,GAAA8E,IAAA,CASA,OAPA9E,GAAAkB,QAAA,SAAAC,GACA,GAAAA,EAAAvB,SAAAA,EAEA,YADAkF,GAAA,KAKAA,EAGA,QAAA7E,GAAAL,EAAAI,GACA,GAAAmB,EASA,OAPAnB,GAAAkB,QAAA,SAAA6D,GACA,GAAAA,EAAAnF,SAAAA,EAEA,YADAuB,EAAA4D,KAKA5D,EAGA,QAAArB,GAAA8E,GACA,MAAA,gBAAAA,GACAA,EAAA9C,QAAA,MAAA,IAEA8C,EAWA,QAAA1B,KACA,GAAA3C,IAAA,CAEA,GAAAyE,GAAA,oBAAAC,UAAAC,gBAAAhD,MAEAiD,EACAC,OAAAC,UACAA,QAAAC,SAAAD,QAAAE,WAAAF,QAAAG,OAKAC,EACAC,UAAAC,UAAAC,cAAAhE,MAAA,mBACAiE,SAAAhB,OAAAiB,GAAA,KAAA,EAGA,OAAAd,IAAAG,GAAAM,EACA,GAAA7E,IACA,QAAAkD,QAAAiC,SAAAjC,QAAAiC,OAAAC,SAIA,UAAAlC,QAAAmC,WAIA,aAAAnC,SAAAC,KAIA,SAAAD,QAAAC,IAAAmC,QAKA,iDAAAxB,KAAAZ,QAAAC,IAAAmC,QASA,QAAAtF,KACA,MACA,mBAAAuF,SACA,mBAAAA,QAAAC,QAIA,QAAA7F,KACA,MAAA,mBAAA6E,QAlgBA,GAAApF,MACAU,EAAA,EAEAD,GACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAIA6B,GACAC,WACA8D,OAAA,EAAA,GACA7D,MAAA,EAAA,IACA8D,KAAA,EAAA,IACA7D,QAAA,EAAA,IACA8D,WAAA,EAAA,IACAC,SAAA,EAAA,IACAC,QAAA,EAAA,IACAC,eAAA,EAAA,KAEAjG,QACAmC,OAAA,GAAA,IACAY,KAAA,GAAA,IACAmD,OAAA,GAAA,IACApD,QAAA,GAAA,IACAE,MAAA,GAAA,IACAmD,SAAA,GAAA,IACAC,MAAA,GAAA,IACAC,OAAA,GAAA,IACApD,MAAA,GAAA,KAEAhB,UACAqE,SAAA,GAAA,IACAC,OAAA,GAAA,IACAC,SAAA,GAAA,IACAtE,UAAA,GAAA,IACAuE,QAAA,GAAA,IACAC,WAAA,GAAA,IACAC,QAAA,GAAA,IACAC,SAAA,GAAA,MAGArD,IAsCAvE,GAAA6E,OAAA,WACAjD,MAAAiG,UAAApG,QAAAqG,KAAAC,UAAA,SAAA5C,GACA,MAAAA,EAAA,IACAnF,EAAA0E,QAAAS,EAAA6C,OAAA,GAGA,IAAApD,GAAAM,EAAAC,EAEA,OAAAA,EACAZ,KAEAA,EAAA3D,MACAoE,KAAA,SACAJ,OAAAA,OAMA5E,EAAA0E,QAAA,WACA9C,MAAAiG,UAAApG,QAAAqG,KAAAC,UAAA,SAAA5C,GACA,MAAAA,EAAA,IACAnF,EAAA6E,OAAAM,EAAA6C,OAAA,GAGA,IAAApD,GAAAM,EAAAC,EAEA,OAAAA,EACAZ,IACAS,KAAA,UACAJ,OAAAA,IAGAL,EAAA3D,MACAoE,KAAA,UACAJ,OAAAA,MASA,IAAAqD,IAAA,QAAA,MAAA,OAAA,OAAA,QACAA,GAAAxG,QAAA,SAAAoC,GACA7D,EAAA6H,UAAAhE,GAAA,WACA,IAAAM,EAAAjE,MAAA,CAIA,GAAAsD,GACAF,EAAA1B,MAAAiG,UAAAK,MAAAJ,KAAAC,UAAA,EAEAjH,MACA0C,EAAAH,EAAAC,EAAApD,MAKAiI,SAAAN,UAAAO,MAAAN,KACAlC,QAAA/B,IAAA+B,QAAAyC,IACAzC,QACApC,IAEArC,MACAqC,EAAAI,EAAAN,EAAAO,EAAA3D,OAEA0F,QAAA/B,IAAA+B,QAAAyC,KAAAD,MACAxC,QACApC,OAyWA,IAAApC,GAAA,WACA,GAAAkH,GAAA,EACAC,IACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,IAGA,OAAA,YACA,MAAAA,IAAAD,GAAA,GAAAC,EAAArH,WAKAC,KACAuF,OAAAC,QAAA3G,EACAc,MACA6E,OAAA3F,QAAAA","file":"logdown.min.js","sourcesContent":["/**\n * logdown - Debug utility with markdown support that runs on browser and server\n *\n * @version v2.0.3\n * @link https://github.com/caiogondim/logdown\n * @author Caio Gondim <me@caiogondim.com> (http://caiogondim.com)\n * @license MIT\n */\n/* global console, module, window, document, navigator, process */\r\n\r\n;(function () {\r\n  'use strict'\r\n\r\n  var instances = []\r\n  var lastUsedColorIndex = 0\r\n  // Solarized accent colors http://ethanschoonover.com/solarized\r\n  var colors = [\r\n    '#B58900',\r\n    '#CB4B16',\r\n    '#DC322F',\r\n    '#D33682',\r\n    '#6C71C4',\r\n    '#268BD2',\r\n    '#2AA198',\r\n    '#859900'\r\n  ]\r\n  // Taken from ansi-styles npm module\r\n  // https://github.com/sindresorhus/ansi-styles/blob/master/index.js\r\n  var ansiColors = {\r\n    modifiers: {\r\n      reset: [0, 0],\r\n      bold: [1, 22], // 21 isn't widely supported and 22 does the same thing\r\n      dim: [2, 22],\r\n      italic: [3, 23],\r\n      underline: [4, 24],\r\n      inverse: [7, 27],\r\n      hidden: [8, 28],\r\n      strikethrough: [9, 29]\r\n    },\r\n    colors: {\r\n      black: [30, 39],\r\n      red: [31, 39],\r\n      green: [32, 39],\r\n      yellow: [33, 39],\r\n      blue: [34, 39],\r\n      magenta: [35, 39],\r\n      cyan: [36, 39],\r\n      white: [37, 39],\r\n      gray: [90, 39]\r\n    },\r\n    bgColors: {\r\n      bgBlack: [40, 49],\r\n      bgRed: [41, 49],\r\n      bgGreen: [42, 49],\r\n      bgYellow: [43, 49],\r\n      bgBlue: [44, 49],\r\n      bgMagenta: [45, 49],\r\n      bgCyan: [46, 49],\r\n      bgWhite: [47, 49]\r\n    }\r\n  }\r\n  var filterRegExps = []\r\n\r\n  function Logdown (opts) {\r\n    // Enforces new.\r\n    if (!(this instanceof Logdown)) {\r\n      return new Logdown(opts)\r\n    }\r\n\r\n    opts = opts || {}\r\n\r\n    var prefix = opts.prefix === undefined ? '' : opts.prefix\r\n    prefix = sanitizeStringToBrowser(prefix)\r\n    if (prefix && isPrefixAlreadyInUse(prefix, instances)) {\r\n      return getInstanceByPrefix(prefix, instances)\r\n    }\r\n\r\n    //\r\n    this.alignOutput = Boolean(opts.alignOutput)\r\n    this.markdown = opts.markdown === undefined ? true : opts.markdown\r\n    this.prefix = prefix\r\n\r\n    //\r\n    instances.push(this)\r\n    alignPrefixes(instances)\r\n\r\n    if (isBrowser()) {\r\n      this.prefixColor = colors[lastUsedColorIndex % colors.length]\r\n      lastUsedColorIndex += 1\r\n    } else if (isNode()) {\r\n      this.prefixColor = getNextPrefixColor()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Static\r\n  // ------\r\n\r\n  Logdown.enable = function () {\r\n    Array.prototype.forEach.call(arguments, function (str) {\r\n      if (str[0] === '-') {\r\n        Logdown.disable(str.substr(1))\r\n      }\r\n\r\n      var regExp = prepareRegExpForPrefixSearch(str)\r\n\r\n      if (str === '*') {\r\n        filterRegExps = []\r\n      } else {\r\n        filterRegExps.push({\r\n          type: 'enable',\r\n          regExp: regExp\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  Logdown.disable = function () {\r\n    Array.prototype.forEach.call(arguments, function (str) {\r\n      if (str[0] === '-') {\r\n        Logdown.enable(str.substr(1))\r\n      }\r\n\r\n      var regExp = prepareRegExpForPrefixSearch(str)\r\n\r\n      if (str === '*') {\r\n        filterRegExps = [{\r\n          type: 'disable',\r\n          regExp: regExp\r\n        }]\r\n      } else {\r\n        filterRegExps.push({\r\n          type: 'disable',\r\n          regExp: regExp\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Public\r\n  // ------\r\n\r\n  var methods = ['debug', 'log', 'info', 'warn', 'error']\r\n  methods.forEach(function (method) {\r\n    Logdown.prototype[method] = function () {\r\n      if (isDisabled(this)) {\r\n        return\r\n      }\r\n\r\n      var preparedOutput\r\n      var args = Array.prototype.slice.call(arguments, 0)\r\n\r\n      if (isBrowser()) {\r\n        preparedOutput = prepareOutputToBrowser(args, this)\r\n\r\n        // IE9 workaround\r\n        // http://stackoverflow.com/questions/5538972/\r\n        //  console-log-apply-not-working-in-ie9\r\n        Function.prototype.apply.call(\r\n          console[method] || console.log,\r\n          console,\r\n          preparedOutput\r\n        )\r\n      } else if (isNode()) {\r\n        preparedOutput = prepareOutputToNode(args, method, this)\r\n\r\n        ;(console[method] || console.log).apply(\r\n          console,\r\n          preparedOutput\r\n        )\r\n      }\r\n    }\r\n  })\r\n\r\n  // Private\r\n  // -------\r\n\r\n  function alignPrefixes (instances) {\r\n    var longest = instances.sort(function (a, b) {\r\n      return b.prefix.length - a.prefix.length\r\n    })[0]\r\n\r\n    instances.forEach(function (instance) {\r\n      if (instance.alignOutput) {\r\n        var padding = new Array(Math.max(longest.prefix.length - instance.prefix.length + 1, 0)).join(' ')\r\n        instance.prefix = instance.prefix + padding\r\n      }\r\n    })\r\n  }\r\n\r\n  function parseMarkdown (text) {\r\n    var styles = []\r\n    var match = getNextMatch(text)\r\n\r\n    while (match) {\r\n      text = text.replace(match.rule.regexp, match.rule.replacer)\r\n\r\n      if (isBrowser()) {\r\n        styles.push(match.rule.style)\r\n        styles.push('') // Empty string resets style.\r\n      }\r\n\r\n      match = getNextMatch(text)\r\n    }\r\n\r\n    return {text: text, styles: styles}\r\n  }\r\n\r\n  function getNextMatch (text) {\r\n    var matches = []\r\n    var rules = []\r\n    if (isBrowser()) {\r\n      rules = [\r\n        {\r\n          regexp: /\\*([^\\*]+)\\*/,\r\n          replacer: function (match, submatch1) {\r\n            return '%c' + submatch1 + '%c'\r\n          },\r\n          style: 'font-weight:bold;'\r\n        },\r\n        {\r\n          regexp: /_([^_]+)_/,\r\n          replacer: function (match, submatch1) {\r\n            return '%c' + submatch1 + '%c'\r\n          },\r\n          style: 'font-style:italic;'\r\n        },\r\n        {\r\n          regexp: /`([^`]+)`/,\r\n          replacer: function (match, submatch1) {\r\n            return '%c' + submatch1 + '%c'\r\n          },\r\n          style:\r\n            'background:#FDF6E3; ' +\r\n            'color:#586E75; ' +\r\n            'padding:1px 5px; ' +\r\n            'border-radius:4px;'\r\n        }\r\n      ]\r\n    } else if (isNode()) {\r\n      rules = [\r\n        {\r\n          regexp: /\\*([^\\*]+)\\*/,\r\n          replacer: function (match, submatch1) {\r\n            return '\\u001b[' + ansiColors.modifiers.bold[0] + 'm' +\r\n                   submatch1 +\r\n                   '\\u001b[' + ansiColors.modifiers.bold[1] + 'm'\r\n          }\r\n        },\r\n        {\r\n          regexp: /_([^_]+)_/,\r\n          replacer: function (match, submatch1) {\r\n            return '\\u001b[' + ansiColors.modifiers.italic[0] + 'm' +\r\n                   submatch1 +\r\n                   '\\u001b[' + ansiColors.modifiers.italic[1] + 'm'\r\n          }\r\n        },\r\n        {\r\n          regexp: /`([^`]+)`/,\r\n          replacer: function (match, submatch1) {\r\n            return '\\u001b[' + ansiColors.bgColors.bgYellow[0] + 'm' +\r\n                   '\\u001b[' + ansiColors.colors.black[0] + 'm' +\r\n                   ' ' + submatch1 + ' ' +\r\n                   '\\u001b[' + ansiColors.colors.black[1] + 'm' +\r\n                   '\\u001b[' + ansiColors.bgColors.bgYellow[1] + 'm'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n\r\n    //\r\n    rules.forEach(function (rule) {\r\n      var match = text.match(rule.regexp)\r\n      if (match) {\r\n        matches.push({\r\n          rule: rule,\r\n          match: match\r\n        })\r\n      }\r\n    })\r\n    if (matches.length === 0) {\r\n      return null\r\n    }\r\n\r\n    //\r\n    matches.sort(function (a, b) {\r\n      return a.match.index - b.match.index\r\n    })\r\n\r\n    return matches[0]\r\n  }\r\n\r\n  function prepareOutputToBrowser (args, instance) {\r\n    var preparedOutput = []\r\n    var parsedMarkdown\r\n\r\n    if (instance.prefix) {\r\n      if (isColorSupported()) {\r\n        preparedOutput.push('%c' + instance.prefix + '%c ')\r\n        preparedOutput.push(\r\n          'color:' + instance.prefixColor + '; font-weight:bold;',\r\n          '' // Empty string resets style.\r\n        )\r\n      } else {\r\n        preparedOutput.push('[' + instance.prefix + '] ')\r\n      }\r\n    } else {\r\n      preparedOutput.push('')\r\n    }\r\n\r\n    // Only first argument on `console` can have style.\r\n    if (typeof args[0] === 'string') {\r\n      if (instance.markdown && isColorSupported()) {\r\n        parsedMarkdown = parseMarkdown(args[0])\r\n        preparedOutput[0] = preparedOutput[0] + parsedMarkdown.text\r\n        preparedOutput = preparedOutput.concat(parsedMarkdown.styles)\r\n      } else {\r\n        preparedOutput[0] = preparedOutput[0] + args[0]\r\n      }\r\n    } else {\r\n      preparedOutput[0] = args[0]\r\n    }\r\n\r\n    if (args.length > 1) {\r\n      preparedOutput = preparedOutput.concat(args.splice(1))\r\n    }\r\n\r\n    return preparedOutput\r\n  }\r\n\r\n  function prepareOutputToNode (args, method, instance) {\r\n    var preparedOutput = []\r\n\r\n    if (instance.prefix) {\r\n      if (isColorSupported()) {\r\n        preparedOutput[0] =\r\n          '\\u001b[' + instance.prefixColor[0] + 'm' +\r\n          '\\u001b[' + ansiColors.modifiers.bold[0] + 'm' +\r\n          instance.prefix +\r\n          '\\u001b[' + ansiColors.modifiers.bold[1] + 'm' +\r\n          '\\u001b[' + instance.prefixColor[1] + 'm'\r\n      } else {\r\n        preparedOutput[0] = '[' + instance.prefix + ']'\r\n      }\r\n    }\r\n\r\n    if (method === 'warn') {\r\n      preparedOutput[0] =\r\n        '\\u001b[' + ansiColors.colors.yellow[0] + 'm' +\r\n        '⚠' +\r\n        '\\u001b[' + ansiColors.colors.yellow[1] + 'm ' +\r\n        (preparedOutput[0] || '')\r\n    } else if (method === 'error') {\r\n      preparedOutput[0] =\r\n        '\\u001b[' + ansiColors.colors.red[0] + 'm' +\r\n        '✖' +\r\n        '\\u001b[' + ansiColors.colors.red[1] + 'm ' +\r\n        (preparedOutput[0] || '')\r\n    } else if (method === 'info') {\r\n      preparedOutput[0] =\r\n        '\\u001b[' + ansiColors.colors.blue[0] + 'm' +\r\n        'ℹ' +\r\n        '\\u001b[' + ansiColors.colors.blue[1] + 'm ' +\r\n        (preparedOutput[0] || '')\r\n    } else if (method === 'debug') {\r\n      preparedOutput[0] =\r\n        '\\u001b[' + ansiColors.colors.gray[0] + 'm' +\r\n        '🐛' +\r\n        '\\u001b[' + ansiColors.colors.gray[1] + 'm ' +\r\n        (preparedOutput[0] || '')\r\n    }\r\n\r\n    args.forEach(function (arg) {\r\n      if (typeof arg === 'string') {\r\n        if (instance.markdown) {\r\n          preparedOutput.push(parseMarkdown(arg).text)\r\n        } else {\r\n          preparedOutput.push(arg)\r\n        }\r\n      } else {\r\n        preparedOutput.push(arg)\r\n      }\r\n    })\r\n\r\n    return preparedOutput\r\n  }\r\n\r\n  function isDisabled (instance) {\r\n    // Parsing `NODE_DEBUG` and `DEBUG` env var.\r\n    // We verify `NODE_DEBUG` and `DEBUG` env vars on runtime so it is\r\n    // easier to test.\r\n    var envVar = null\r\n    if (typeof process !== 'undefined' &&\r\n        process.env !== undefined &&\r\n        filterRegExps.length === 0) {\r\n      // `NODE_DEBUG` has precedence over `DEBUG`\r\n      if (process.env.NODE_DEBUG !== undefined &&\r\n          process.env.NODE_DEBUG !== '') {\r\n        envVar = 'NODE_DEBUG'\r\n      } else if (process.env.DEBUG !== undefined &&\r\n                 process.env.DEBUG !== '') {\r\n        envVar = 'DEBUG'\r\n      }\r\n\r\n      if (envVar) {\r\n        Logdown.disable('*')\r\n        process.env[envVar]\r\n          .split(',')\r\n          .forEach(function (regExp) {\r\n            Logdown.enable(regExp)\r\n          })\r\n      }\r\n    }\r\n\r\n    // Now checks if instance is disabled\r\n    var isDisabled_ = false\r\n    filterRegExps.forEach(function (filter) {\r\n      if (filter.type === 'enable' && filter.regExp.test(instance.prefix)) {\r\n        isDisabled_ = false\r\n      } else if (filter.type === 'disable' &&\r\n                 filter.regExp.test(instance.prefix)) {\r\n        isDisabled_ = true\r\n      }\r\n    })\r\n\r\n    return isDisabled_\r\n  }\r\n\r\n  function prepareRegExpForPrefixSearch (str) {\r\n    return new RegExp('^' + str.replace(/\\*/g, '.*?') + '$')\r\n  }\r\n\r\n  function isPrefixAlreadyInUse (prefix, instances) {\r\n    var isPrefixAlreadyInUse_ = false\r\n\r\n    instances.forEach(function (instance) {\r\n      if (instance.prefix === prefix) {\r\n        isPrefixAlreadyInUse_ = true\r\n        return\r\n      }\r\n    })\r\n\r\n    return isPrefixAlreadyInUse_\r\n  }\r\n\r\n  function getInstanceByPrefix (prefix, instances) {\r\n    var instance\r\n\r\n    instances.forEach(function (instanceCur) {\r\n      if (instanceCur.prefix === prefix) {\r\n        instance = instanceCur\r\n        return\r\n      }\r\n    })\r\n\r\n    return instance\r\n  }\r\n\r\n  function sanitizeStringToBrowser (str) {\r\n    if (typeof str === 'string') {\r\n      return str.replace(/%c/g, '')\r\n    } else {\r\n      return str\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n   * and the Firebug extension (any Firefox version) are known\r\n   * to support \"%c\" CSS customizations.\r\n   *\r\n   * Code took from https://github.com/visionmedia/debug/blob/master/browser.js\r\n   */\r\n  function isColorSupported () {\r\n    if (isBrowser()) {\r\n      // Is webkit? http://stackoverflow.com/a/16459606/376773\r\n      var isWebkit = ('WebkitAppearance' in document.documentElement.style)\r\n      // Is firebug? http://stackoverflow.com/a/398120/376773\r\n      var isFirebug = (\r\n        window.console &&\r\n        (console.firebug || (console.exception && console.table))\r\n      )\r\n      // Is firefox >= v31?\r\n      // https://developer.mozilla.org/en-US/docs/Tools/\r\n      //  Web_Console#Styling_messages\r\n      var isFirefox31Plus = (\r\n        navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) &&\r\n        parseInt(RegExp.$1, 10) >= 31\r\n      )\r\n\r\n      return (isWebkit || isFirebug || isFirefox31Plus)\r\n    } else if (isNode()) {\r\n      if (process.stdout && !process.stdout.isTTY) {\r\n        return false\r\n      }\r\n\r\n      if (process.platform === 'win32') {\r\n        return true\r\n      }\r\n\r\n      if ('COLORTERM' in process.env) {\r\n        return true\r\n      }\r\n\r\n      if (process.env.TERM === 'dumb') {\r\n        return false\r\n      }\r\n\r\n      if (\r\n        /^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)\r\n      ) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n  }\r\n\r\n  function isNode () {\r\n    return (\r\n      typeof module !== 'undefined' &&\r\n      typeof module.exports !== 'undefined'\r\n    )\r\n  }\r\n\r\n  function isBrowser () {\r\n    return (typeof window !== 'undefined')\r\n  }\r\n\r\n  var getNextPrefixColor = (function () {\r\n    var lastUsed = 0\r\n    var nodePrefixColors = [\r\n      [31, 39], // red\r\n      [32, 39], // green\r\n      [33, 39], // yellow\r\n      [34, 39], // blue\r\n      [35, 39], // magenta\r\n      [36, 39] // cyan\r\n    ]\r\n\r\n    return function () {\r\n      return nodePrefixColors[(lastUsed += 1) % nodePrefixColors.length]\r\n    }\r\n  })()\r\n\r\n  // Export module\r\n  if (isNode()) {\r\n    module.exports = Logdown\r\n  } else if (isBrowser()) {\r\n    window.Logdown = Logdown\r\n  }\r\n}())\r\n"]}